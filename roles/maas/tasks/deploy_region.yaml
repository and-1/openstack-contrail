- name: "REGION: generate passwords for"
  set_fact:
    "maas_{{item}}_pwd": "{{lookup('password', inventory_dir+'/credentials/maas.'+item+'.creds chars=ascii_letters length=15')}}"
  with_items:
  - 'db'
  - 'ui'
- name: "REGION: save region endpoint"
  copy:
    dest: "{{inventory_dir}}/../share_creds/maas.region.endpoint"
    content: "{{MAAS_ENDPOINT}}"
  delegate_to: localhost
- name: "REGION: get region endpoint"
  set_fact:
    maas_endpoint: "{{lookup('file', inventory_dir + '/../share_creds/maas.region.endpoint')}}"
- name: "REGION: create bin scripts"
  template:
    src: "{{item}}.j2"
    dest: "/opt/maas/bin/{{item}}"
    mode: 0775
  with_items:
  - db-init.sh
  - db-sync.sh
  - ui-user-init.sh
  - import-boot-resources.sh
- name: "REGION: create configs"
  template:
    src: "{{item}}.j2"
    dest: "/opt/maas/conf/{{item}}"
    mode: 0775
  with_items:
  - regiond.conf
  - 000-default.conf
  - maas-http.conf
  - ports.conf
- name: "REGION: create network for region controller"
  docker_network:
    name: maas
    driver: bridge
    driver_options:
      com.docker.network.bridge.name: maas
      com.docker.network.bridge.enable_ip_masquerade: "true"
    ipam_options:
      subnet: '10.10.10.0/24'
    state: present
- name: "REGION: start postgres contrainer"
  docker_container:
    name: postgresql
    image: postgres:9.6
    state: started
    detach: true
    env:
      USER_DB_PASS: "{{maas_db_pwd}}"
    networks:
    - name: maas
    purge_networks: yes
    volumes:
    - /opt/maas/pg_data:/var/lib/postgresql/data
    - /opt/maas/bin/db-init.sh:/tmp/db-init.sh
- name: "REGION: create db for maas"
  shell: docker exec -t postgresql /tmp/db-init.sh
- name: "REGION: start db sync job"
  shell: "docker run --rm -t --name maas-db-sync-job \
         --network maas \
         -v /opt/maas/conf/regiond.conf:/etc/maas/regiond.conf \
         -v /opt/maas/bin/db-sync.sh:/tmp/db-sync.sh \
         --entrypoint /tmp/db-sync.sh \
         {{MAAS_REGION_IMG}}"
- name: "REGION: run maas region contrainer"
  docker_container:
    name: maas-region-controller
    image: "{{MAAS_REGION_IMG}}"
    state: started
    networks:
    - name: maas
    purge_networks: yes
    privileged: true
    dns_servers: "{{MAAS_DNS_UPSTREAM}}"
    hostname: maas-region-controller
    ports:
    - "{{ansible_default_ipv4.address}}:{{MAAS_UI_PORT}}:80"
#    - "{{ansible_default_ipv4.address}}:69:69/udp"
    - "{{ansible_default_ipv4.address}}:53:53"
    - "{{ansible_default_ipv4.address}}:5240:5240"
    tty: true
    volumes:
    - /opt/maas/conf/regiond.conf:/etc/maas/regiond.conf
    - /opt/maas/bin/ui-user-init.sh:/tmp/ui-user-init.sh
    - /opt/maas/conf/000-default.conf:/etc/apache2/sites-available/000-default.conf
    - /opt/maas/conf/maas-http.conf:/etc/apache2/conf-enabled/maas-http.conf
    - /opt/maas/bin/import-boot-resources.sh:/tmp/import-boot-resources.sh
    - /sys/fs/cgroup:/sys/fs/cgroup:ro
    - /opt/maas/conf/ports.conf:/etc/apache2/ports.conf
- name: "REGION: create admin user"
  shell: "docker exec -t \
          -e ADMIN_USERNAME={{MAAS_UI_USER}} \
          -e ADMIN_PASSWORD={{maas_ui_pwd}} \
          -e ADMIN_EMAIL={{MAAS_UI_USER_MAIL}} \
          maas-region-controller bash -c /tmp/ui-user-init.sh"
- name: "REGION: get information for rack initialization"
  shell: docker exec -t maas-region-controller {{item}}
  with_items:
  - "maas-region apikey --username={{MAAS_UI_USER}}"
  - "cat /var/lib/maas/secret"
  register: maas_secrets
- name: "REGION: generate admin ssh key"
  command : ssh-keygen -q -t rsa -f "{{inventory_dir}}/../share_creds/maas.ssh.key" -C "" -N ""
  args:
    creates: "{{inventory_dir}}/../share_creds/maas.ssh.key"
  delegate_to: localhost
- name: "REGION: get ssh key"
  set_fact:
    "maas_ssh_{{item.0}}": "{{lookup('file', inventory_dir+'/../share_creds/maas.ssh.'+item.1)}}"
  with_together:
  - ['pub','priv']
  - ['key.pub','key']
  delegate_to: localhost
- name: "REGION: save secrets to file"
  copy: 
    dest: "{{inventory_dir}}/../share_creds/{{item.1}}.creds"
    content: "{{item.0.stdout}}"
  delegate_to: localhost
  with_together:
  - "{{maas_secrets.results}}"
  - ['maas.apikey', 'maas.secret']
