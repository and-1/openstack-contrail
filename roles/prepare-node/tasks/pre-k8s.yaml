---
- name: Check dependency for that region
  include_tasks: checks.yaml
- name: Set network-dispatcher dirs
  set_fact:
    nd_dirs:
    - unmanaged.d
    - configured.d
- name: Ensure networkd-dispatcher exists
  file:
    path: /etc/networkd-dispatcher/{{item}}
    state: directory
    owner: root
    mode: 755
  with_items:
  - "{{nd_dirs}}"
- name: Config networkd-dispatcher
  copy:
    src: ringUP.sh
    dest: /etc/networkd-dispatcher/{{item}}/ringUP.sh
    mode: 0770
    owner: root
  with_items:
  - "{{nd_dirs}}"
  register: netd_conf
- name: Up to max rings buffer in runtime
  shell: "IFACE={{item}} /etc/networkd-dispatcher/unmanaged.d/ringUP.sh"
  with_items:
  - "{{ansible_interfaces | reject('equalto', 'lo') | list}}"
  when: "netd_conf.results | selectattr('changed') | list | length > 0"
- block:
  - name: "Config network interfaces (NETPLAN) "
    template:
      src: "iface.conf.j2"
      dest: "/etc/netplan/60-{{item}}-iface.yaml"
      # Force set to false because after routes will be added
      force: false
    register: netplan_config
    changed_when: "netplan_config.changed or hostvars[ansible_hostname]['ansible_'+hostvars[ansible_hostname][item]['iface']] is not defined"
    with_items:
    - "k8s"
    - "ceph"
  - name: "Apply new network configuration"
    shell: netplan apply
    when: "netplan_config.results | selectattr('changed','eq',True) | list | length > 0"
  when: "ansible_distribution_version == '18.04' and 'maas' not in group_names"
# TODO: Update template after add parent parameter
#- block:
#  # only for test purpose
#  - name: "Config network interfaces (IFUPDOWN)"
#    template:
#      src: "iface_ifupdown.conf.j2"
#      dest: /etc/network/interfaces.d/60-osh-iface.cfg
#  - name: "Apply new network configuration"
#    shell: systemctl restart networking && sleep 10
#  when: "ansible_distribution_version == '16.04'"
- name: Add dns servers
  template: 
    src: resolved.conf.j2
    dest: /etc/systemd/resolved.conf
  register: resovle_restart
- name: Restart systemd-resolved
  systemd:
    name: systemd-resolved
    state: restarted
  when: "resovle_restart.changed"
# Check dns records
- block:
  - name: Get endpoints
    include_vars:
      file: "{{inventory_dir}}/helm_vars/endpoints.yaml"
      name: ep
  - name: Check resovle dns names
    shell: getent hosts "{{ep[item]['host_fqdn_override']['public']['host']}}"
    with_items:
    - "{{ep|list}}"
    when: "ep[item]['host_fqdn_override'] is defined and ep[item]['host_fqdn_override']['public'] is defined"
    register: ep_dns_check
    failed_when: false
    changed_when: false
  - name: Notify if resolve test fail
    fail:
      msg: "{{ep[item['item']]['host_fqdn_override']['public']['host']}} record doesn't exist or don't equal VIP"
    with_items:
    - "{{ep_dns_check.results | rejectattr('item','in',['identity','dashboard'])|list }}"
    when: "item.rc is defined and (item.rc != 0 or item.stdout.split(' ')[0] != vip_ip)"
  - name: Notify if resolve test fail
    fail:
      msg: "{{ep[item['item']]['host_fqdn_override']['public']['host']}} record doesn't exist or don't equal VIP"
    with_items:
    - "{{ep_dns_check.results | selectattr('item','in',['identity','dashboard'])|list }}"
    when: "item.rc is defined and item.rc != 0"
  when: "'maas' not in group_names"
  run_once: true
- name: Disable systemd-timesyncd
  systemd:
    name: systemd-timesyncd
    state: stopped
    masked: true
- name: Install required packages
  apt: name="{{item}}" state=present update_cache=true
  with_items:
  - "{{packages}}"
  register: packages
- name: Install pip packages
  pip: name="{{item}}"
  with_items:
  - "{{pip_packages}}"
- name: Bring ntp service to valid state
  systemd: name=ntp state="{% if rack_ctl is defined and rack_ctl|bool%}stopped{%else%}started{%endif%}" masked="{% if rack_ctl is defined and rack_ctl|bool%}true{%else%}false{%endif%}"
# Separate kubelet, docker logs from other
- name: Force store journald logs on disk
  lineinfile:
    regexp: ^#?Storage=.*
    line: Storage=persistent
    state: present
    path: /etc/systemd/journald.conf
- name: Adjust rsyslog
  copy:
    dest: /etc/rsyslog.d/30-k8s.conf
    content: |
      :programname,isequal,"kubelet" /var/log/kubelet.log
      & stop
      :programname,isequal,"dockerd" /var/log/dockerd.log
      & stop
  notify: restart rsyslog
- name: Gather facts from servers
  setup:
  delegate_to: "{{ item }}"
  delegate_facts: True
  when: hostvars[item]['ansible_'+k8s.iface|replace('-','_')] is not defined or hostvars[item]['ansible_'+k8s.iface|replace('-','_')]['ipv4'] is not defined
  with_items: "{{ groups['k8s-cluster'] }}"
  run_once: true
- name: Add dns names to hosts
  lineinfile:
    line: "{{hostvars[item.1]['ansible_'+hostvars[inventory_hostname][item.0]['iface']|replace('-','_')]['ipv4']['address']}} {{hostvars[item.1]['ansible_hostname']}}{%if fqdn_hostnames %}.{{int_domain_suffix}}{%endif%}"
    path: /etc/hosts
    state: present
  with_nested:
  - ["k8s","ceph"]
  - "{{ groups['k8s-cluster'] }}"
  when: "'maas' not in group_names"
- name: Add endpoints to hosts for rbd provision
  lineinfile:
    line: "{{hostvars[item.0]['ansible_'+ceph.iface|replace('-','_')]['ipv4']['address']}} {{item.1}}"
    path: /etc/hosts
    state: present
  with_nested:
  - "{{ groups['control-plane'] }}"
  - "{{ endpoints }}"
  when: "endpoints | length != 0 and 'maas' not in group_names"
- name: Disable swap
  lineinfile:
    regexp: 'swap'
    state: absent
    path: '/etc/fstab'
- name: Add ntp config
  template:
    src: ntp.conf.j2
    dest: /etc/ntp.conf
- name: Ensure share_creds directory exist
  file: 
    path: "{{inventory_dir}}/../share_creds"
    state: directory
  delegate_to: localhost
  run_once: true
