---
- name: Enable feature in kubeapi
  lineinfile:
    backrefs: yes
    line: '\1True\2'
    regexp: '(^.*feature-gates.*MountPropagation=)False(.*)'
    state: present
    path: /etc/kubernetes/manifests/kube-apiserver.manifest
  when: "'control-plane' in group_names and kube_version is version('v1.11.3', '<=')"
  notify: restart kubelet
- name: Set k8s node labels (control)
  shell: "kubectl label node --overwrite {{ item.0 }} {{item.1}}=enabled"
  with_nested:
  - "{{ groups['control-plane'] }}"
  - "{{ control_plane_labels }}"
  ignore_errors: yes
- name: Set k8s node labels (compute)
  shell: "kubectl label node --overwrite {{ item.0 }} {{item.1}}=enabled"
  with_nested:
  - "{{ groups['compute-plane'] }}"
  - "{{ compute_plane_labels }}"
  ignore_errors: yes
- name: Set k8s node labels (osd)
  include: "osd-labels.yaml"
  with_items:
  - "{{groups['osd-nodes']}}"
  loop_control:
    loop_var: node
- name: Download kubectl
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/{{ kube_version }}/bin/linux/amd64/kubectl"
    owner: root
    mode: 755
    dest: "{{inventory_dir}}/artifacts/kubectl"
  delegate_to: localhost
- name: Change kubeconfig on ansible host
  shell: "./kubectl --kubeconfig admin.conf config set-cluster {{int_domain_suffix}} --server https://{{hostvars[groups['kube-master']|first]['ansible_default_ipv4']['address']}}:{{kube_apiserver_port}}"
  args:
    chdir: "{{inventory_dir}}/artifacts/"
  delegate_to: localhost
