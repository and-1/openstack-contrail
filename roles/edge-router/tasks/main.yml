---
# tasks file for edge-router
- name: Get keystone admin endpoint
  include_vars:
    file: "{{inventory_dir}}/../share_creds/identity.endpoint"
    name: ks_ep
- name: Set ks url endpoint
  set_fact:
    ks_endpoint: "{{ks_ep['auth_url']|urlsplit('hostname')}}"
- name: Set ks password
  set_fact:
    ks_password: "{{ks_ep['password']}}"
- name: Set TungstenFabric API endpoint
  set_fact:
    tf_endpoint: "contrail-config-api-{{region|lower}}.{{ext_domain_suffix}}"
- block:
  - name: Generate HOT files (common)
    template:
      src: "{{item}}.j2"
      dest: "{{inventory_dir}}/artifacts/{{item}}"
    with_items:
    - HOT_edge.yaml
    - edge_router.env
    register: hot_template_common
  - name: Generate scale file (shared)
    template:
      src: "HOT_edge_scale_shared.yaml.j2"
      dest: "{{inventory_dir}}/artifacts/HOT_edge_scale_shared.yaml"
    register: "hot_template_scale_shared"
    when: output_vrfs|length - output_vrfs | map(attribute='dedicated_edge') | select('defined') | select('eq', True)  | list | length != 0
  - name: Generate scale file (dedicated)
    template:
      src: "HOT_edge_scale_dedicated.yaml.j2"
      dest: "{{inventory_dir}}/artifacts/HOT_edge_scale_dedicated.yaml"
    register: "hot_template_scale_shared"
    when: output_vrfs | map(attribute='dedicated_edge') | select('defined') | select('eq', True)  | list | length > 0
  - name: Deploy edge router
    os_stack:
      auth: "{{ks_ep}}"
      environment: "{{inventory_dir}}/artifacts/edge_router.env"
      region_name: "{{region}}"
      state: present
      template: "{{inventory_dir}}/artifacts/HOT_edge.yaml"
      timeout: 300
      wait: true
      name: EDGE_Router
    when: "(hot_template_common.results is defined and hot_template_common.results | selectattr('changed') | list | length > 0) or (hot_template_scale_shared is defined and hot_template_scale_shared.changed) or (hot_template_scale_dedicated is defined and hot_template_scale_dedicated.changed)"
  when: "action == 'apply'"
- block:
  - name: Delete HOT files
    file:
      path: "{{inventory_dir}}/artifacts/{{item}}"
      state: absent
    with_items:
    - HOT_edge.yaml
    - HOT_edge_scale_shared.yaml
    - HOT_edge_scale_dedicated.yaml
    - edge_router.env
  - name: Delete edge router(s)
    os_stack:
      auth: "{{ks_ep}}"
      region_name: "{{region}}"
      state: absent
      timeout: 300
      wait: true
      name: EDGE_Router
  when: "action == 'delete'"
