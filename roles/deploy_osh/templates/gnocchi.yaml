# This values for mysql indexer only
images:
  tags:
    gnocchi_storage_init: 10.233.44.194:5000/queens/ubuntu-binary-ceph-base:1.0
    db_sync: 10.233.44.194:5000/queens/ubuntu-binary-gnocchi-base:1.0
    gnocchi_api: 10.233.44.194:5000/queens/ubuntu-binary-gnocchi-base:1.0
    gnocchi_statsd: 10.233.44.194:5000/queens/ubuntu-binary-gnocchi-base:1.0
    gnocchi_metricd: 10.233.44.194:5000/queens/ubuntu-binary-gnocchi-base:1.0
dependencies:
  static:
    db_sync:
      jobs:
        - gnocchi-storage-init
        - gnocchi-db-init
      services:
        - endpoint: internal
          service: oslo_db
    metricd:
      services:
        - endpoint: internal
          service: oslo_db
        - endpoint: internal
          service: metric
    statsd:
      services:
        - endpoint: internal
          service: oslo_db
        - endpoint: internal
          service: metric
    tests:
      services:
        - endpoint: internal
          service: identity
        - endpoint: internal
          service: oslo_db
        - endpoint: internal
          service: metric
pod:
  replicas:
    api: 2
conf:
  gnocchi:
    DEFAULT:
      debug: false
    metricd:
      workers: 1
    indexer:
      driver: sqlalchemy
      gnocchi?charset: utf8
  apache: |
    Listen 0.0.0.0:{{ tuple "metric" "internal" "api" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}
    SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
    CustomLog /dev/stdout combined env=!forwarded
    CustomLog /dev/stdout proxy env=forwarded
    <VirtualHost *:{{ tuple "metric" "internal" "api" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}>
        WSGIDaemonProcess gnocchi processes=1 threads=2 user=gnocchi group=gnocchi display-name=%{GROUP}
        WSGIProcessGroup gnocchi
        WSGIScriptAlias / "/usr/bin/gnocchi-api"
        WSGIApplicationGroup %{GLOBAL}
        ErrorLog /dev/stderr
        SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
        CustomLog /dev/stdout combined env=!forwarded
        CustomLog /dev/stdout proxy env=forwarded
        <Directory />
            Options FollowSymLinks
            AllowOverride None
            Require all granted
        </Directory>
    </VirtualHost>
  paste:
    composite:gnocchi+basic:
      use: egg:Paste#urlmap
      /: gnocchiversions_pipeline
      /v1: gnocchiv1+noauth
      /healthcheck: healthcheck
    composite:gnocchi+keystone:
      use: egg:Paste#urlmap
      /: gnocchiversions_pipeline
      /v1: gnocchiv1+keystone
      /healthcheck: healthcheck
    composite:gnocchi+remoteuser:
      use: egg:Paste#urlmap
      /: gnocchiversions_pipeline
      /v1: gnocchiv1+noauth
      /healthcheck: healthcheck
    pipeline:gnocchiv1+noauth:
      pipeline: http_proxy_to_wsgi gnocchiv1
    pipeline:gnocchiv1+keystone:
      pipeline: http_proxy_to_wsgi keystone_authtoken gnocchiv1
    pipeline:gnocchiversions_pipeline:
      pipeline: http_proxy_to_wsgi gnocchiversions
    app:gnocchiversions:
      paste.app_factory: gnocchi.rest.app:app_factory
      root: gnocchi.rest.api.VersionsController
    app:gnocchiv1:
      paste.app_factory: gnocchi.rest.app:app_factory
      root: gnocchi.rest.api.V1Controller
    filter:keystone_authtoken:
      use: egg:keystonemiddleware#auth_token
      oslo_config_project: gnocchi
    filter:http_proxy_to_wsgi:
      use: egg:oslo.middleware#http_proxy_to_wsgi
      oslo_config_project: gnocchi
    app:healthcheck:
      use: egg:oslo.middleware#healthcheck
      oslo_config_project: gnocchi
  policy:
    admin_or_creator: 'role:admin or user:%(creator)s or project_id:%(created_by_project_id)s'
    resource_owner: 'project_id:%(project_id)s'
    metric_owner: 'project_id:%(resource.project_id)s'
    get status: 'role:admin'
    create resource: ''
    get resource: 'rule:admin_or_creator or rule:resource_owner'
    update resource: 'rule:admin_or_creator'
    delete resource: 'rule:admin_or_creator'
    delete resources: 'rule:admin_or_creator'
    list resource: 'rule:admin_or_creator or rule:resource_owner'
    search resource: 'rule:admin_or_creator or rule:resource_owner'
    create resource type: 'role:admin'
    delete resource type: 'role:admin'
    update resource type: 'role:admin'
    list resource type: ''
    get resource type: ''
    get archive policy: ''
    list archive policy: ''
    create archive policy: 'role:admin'
    update archive policy: 'role:admin'
    delete archive policy: 'role:admin'
    create archive policy rule: 'role:admin'
    get archive policy rule: ''
    list archive policy rule: ''
    update archive policy rule: 'role:admin'
    delete archive policy rule: 'role:admin'
    create metric: ''
    delete metric: 'rule:admin_or_creator'
    get metric: 'rule:admin_or_creator or rule:metric_owner'
    search metric: 'rule:admin_or_creator or rule:metric_owner'
    list metric: 'rule:admin_or_creator or rule:metric_owner'
    get measures:  'rule:admin_or_creator or rule:metric_owner'
    post measures:  'rule:admin_or_creator'

manifests:
  job_db_init_indexer: false
  secret_db_indexer: false
