pod:
  replicas:
{% for pod, rep in replicas[item.name].iteritems() %}
    {{pod}}: {%if cp_mode == "single" %}1{%else%}{{rep}}{%endif%}
{% endfor %}
  lifecycle:
    upgrades:
      revision_history: 3
      pod_replacement_strategy: RollingUpdate
      rolling_update:
        max_unavailable: 1
        max_surge: 3
    termination_grace_period:
      kube_state_metrics:
        timeout: 30
  resources:
    enabled: {{pod_resources}}
    kube_state_metrics:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "1024Mi"
        cpu: "2000m"
    jobs:
      image_repo_sync:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"

# For kubespray integration
scheduler_labels:
  k8s-app: kube-scheduler
controller_labels:
  k8s-app: kube-controller-manager
endpoints:
  calico_exporter:
    hosts:
      default: calico-exporter
    port:
      metrics:
        default: 9091
monitoring:
  prometheus:
    enabled: {{monitoring}}
    calico_exporter:
      scrape: true
      port: 9091
manifests:
  monitoring:
    prometheus:
      service_exporter: true

