- block:
  - name: "Gen password for {{endpoint.key}}"
    copy:
      content: "{%if gen_passwd %}{{lookup('password', '/dev/null chars=ascii_letters length=15')}}{%else%}{{endpoints[endpoint.key]['auth'][item.key]['password']}}{%endif%}"
      dest: "{{inventory_dir+'/credentials/'+endpoint.key+'.'+item.key+'.creds'}}"
      force: no
    with_dict:
    - "{{endpoint.value.auth}}"
  - name: "Get password for {{endpoint.key}}"
    set_fact: 
      "{{endpoint.key}}_{{item.key}}_pwd": "{{ lookup('file', inventory_dir+'/credentials/'+endpoint.key+'.'+item.key+'.creds') }}"
    with_dict:
    - "{{endpoint.value.auth}}"
  when: "endpoint.key not in  ['ceph_object_store'] and endpoint.value.auth[item.key].link is not defined"

- name: "{{endpoint.key}}: Handle exeptions (user present in one more endpoint)"
  set_fact:
    "{{endpoint.key}}_{{item.key}}_pwd": "{{lookup('file', inventory_dir+'/credentials/'+endpoint.value.auth[item.key].link+'.creds') }}"
  with_dict:
  - "{{endpoint.value.auth}}"
  when: "endpoint.key not in  ['ceph_object_store'] and endpoint.value.auth[item.key].link is defined"

# Exception for s3 passwords
- name: "Passwords for {{endpoint.key}}"
  block:
  - name: "Gen password for {{endpoint.key}}"
    copy:
      content: "{%if gen_passwd %}{{lookup('password', '/dev/null chars=ascii_letters length=15')}}{%else%}{{endpoints[endpoint.key]['auth'][item.0][item.1]}}{%endif%}"
      dest: "{{inventory_dir+'/credentials/'+endpoint.key+'.'+item.0+'.'+item.1+'.creds'}}"
      force: no
    with_nested:
    - "{{endpoint.value.auth|list}}"
    - ['access_key', 'secret_key']
  - name: "Get password for {{endpoint.key}}"
    set_fact:
      "{{endpoint.key}}_{{item.0}}_{{item.1}}_pwd": "{{lookup('file', inventory_dir+'/credentials/'+endpoint.key+'.'+item.0+'.'+item.1+'.creds')}}"
    with_nested:
    - "{{endpoint.value.auth|list}}"
    - ['access_key', 'secret_key']
  when: "endpoint.key == 'ceph_object_store'"
